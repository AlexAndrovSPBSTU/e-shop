version: '3'
networks:
  eshop-dev:
    driver: bridge
services:
  back:
      container_name: Backend-EShop
      image: alexey37282/back:dev
      ports:
        - "8080:8080"
      networks:
      - eshop-dev
      depends_on:
        postgres-db:
          condition: service_healthy
      environment:
        SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-db:5432/e-shop
        SPRING_DATASOURCE_USERNAME: postgres
        SPRING_DATASOURCE_PASSWORD: 12345
  postgres-db:
    container_name: EShop-PostgresDB
    image: postgres:latest
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      POSTGRES_DB: e-shop
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
    ports:
      - "5432:5432"
    networks:
      - eshop-dev
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
      - ./fill_tables.sql:/docker-entrypoint-initdb.d/fill_tables.sql
  front:
    container_name: Frontend-EShop
    image: maksstv/front:dev
    ports:
        - "3000:3000"
    networks:
      - eshop-dev
    depends_on:
      - back
  s3:
    container_name: S3-EShop
    image: maksstv/s3:dev
    ports:
        - "8001:8001"
    networks:
      - eshop-dev
    depends_on:
      - back
volumes:
  postgres-data:

  